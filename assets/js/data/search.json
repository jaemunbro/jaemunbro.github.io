[ { "title": "ML - What is MLOps? (MLOps란)", "url": "/posts/whatis-mlops/", "categories": "ML", "tags": "ml, mlops", "date": "2021-05-22 00:00:00 +0900", "snippet": "MLOps가 무엇인고? Medium Blog MLOps가 무엇인고?에 작성했던 글을 옮겨옴.근래 들어 MLOps라는 용어가 점점 더 보편적이 되어가고 있다.이것은 또 무엇에 쓰는 물건인고? 한번 알아보자.MLOps의 정의먼저 한 문장으로 간단히 정의해보면,개발과 운영을 따로 나누지 않고 개발의 생산성과 운영의 안정성을 최적화하기 위한 문화이자 방법론이 DevOps이며, 이를 ML 시스템에 적용한 것이 MLOps이다.DevOps의 Dev-Ops-QA간 벤다이어그램. 위의 Dev를 ML로 살짝 바꾸면 MLOps?(from htt..." }, { "title": "Hadoop - YARN Scheduler setting (하둡 - YARN 스케쥴러 설정)", "url": "/posts/yarn-scheduler/", "categories": "Hadoop", "tags": "hadoop, yarn, scheduler", "date": "2021-05-09 11:45:00 +0900", "snippet": "YARN의 스케쥴러 타입에 대해 알아보기 전에 YARN에 대해서도 간단히 살펴보자.YARNYARN은 (Yet Another Resource Negotiator)은 하둡의 크러스터 자원관리 시스템이다. YARN은 클러스터의 자원을 요청하고 사용하기 위한 API를 제공한다.YARN은 리소스 매니저와 노드 매니저 두가지 장기 실행 데몬을 통해 핵심 서비스를 제공한다.리소스 매니저는 클러스터에서 유일하며 클러스터 전체 자원의 사용량을 관리하고, 모든 머신에서 실행되는 노드 매니저는 컨테이너를 구동하고 모니터링 하는 역할을 맡는다.YA..." }, { "title": "Spark - Core Optimization (스파크 - 최적화)", "url": "/posts/spark-basic-optimization/", "categories": "Spark", "tags": "spark, optimization", "date": "2021-05-01 01:43:00 +0900", "snippet": "스파크의 기본적인 최적화 세팅 방법들에 대해 정리해보자.본문 작성에 주되게 참조한 소스는 Spark + AI Summit Europe 2019에서 발표한 Databricks의 Daniel Tomes의 세션인 Apache Spark Core – Practical Optimization이다.General OptimizationPractical Optimization에 관해서 깊이 파보기 전에, 기본적인 최적화 방법들에 대해서 먼저 간단히 살펴보자.File Format 최적화 Parquet, ORC와 같은 columnar file..." }, { "title": "Spark - Troubleshooting Cheatsheet (스파크 - 트러블슈팅 가이드)", "url": "/posts/troubleshooting-spark/", "categories": "Spark", "tags": "spark, troubleshooting", "date": "2021-04-30 01:43:00 +0900", "snippet": "스파크의 문제 사례들과 그 해결 방법들에 대해 알아보자.문제 케이스들은 일부 직접 겪은 것들과 본문 하단 링크의 케이스들을 취합하였다.Troubleshooting Tips트러블슈팅을 위해 verbose mode를 활용하자spark-submit --driver-memory 10g --verbose --master yarn --executor memory...다음 정보들이 프린트된다. all default properties command line options setting from spark ‘conf’ file set..." }, { "title": "블로그 이사", "url": "/posts/blog-migration/", "categories": "ETC, Thoughts", "tags": "thoughts", "date": "2021-04-27 11:25:00 +0900", "snippet": "Medium 외에 github로 블로그를 시작했다.Medium 플랫폼은 처음에는 Netflix 등의 기업 테크 블로그 때문에 Medium 플랫폼에 들어가게 되었고 이런 경험들을 통해서 ‘호감’ 플랫폼으로 자리잡게 되었었는데, 점차 몇몇 기업의 테크 블로그를 제외한 일반 블로그들 중에는 clickbait 같은, 흥미로운 제목으로 클릭을 유발하는 유료 자료가 많아지는 느낌이다. 특히 구글을 검색해서 미디움 페이지를 클릭했을 때, 몇줄 나오고 유료라서 더 이상 볼 수 없다는 알림을 보는 경험은… 정말 별로다. 굳이 보려면 우회해서 ..." }, { "title": "Features of NoSQL Databases (NoSQL 데이터베이스별 특징)", "url": "/posts/nosql-databases/", "categories": "NoSQL", "tags": "nosql", "date": "2021-02-06 00:00:00 +0900", "snippet": "초기의 파일 기반이나 계층형 데이터베이스 이후 수십년동안 데이터베이스가 곧 관계형 데이터베이스로 이해될 만큼 관계형 데이터베이스 중심의 시장이 지속되어 왔다. 그러나 최근 몇 년간 대용량 데이터에 대한 요구가 급격히 커지면서 대용량 데이터의 처리에 강점을 가진 NoSQL과 같은 다양한 데이터베이스 모델이 개발되었다.관계형 데이터베이스와 NoSQL 데이터베이스의 특징과 차이에 대해 간단히 정리해보자. 관계형 데이터베이스는 엔터티의 구조와 엔터티 간의 관계를 토대로 설계하지만, NoSQL에서는 일반적으로 엔터티 관계 구조를 갖지..." }, { "title": "Spark - Config Executors (스파크 - 최적의 익스큐터 사이즈와 개수 정하기)", "url": "/posts/spark-config-executors/", "categories": "Spark", "tags": "spark, executor", "date": "2020-04-30 00:00:00 +0900", "snippet": "Original Post: [Apache Spark] Executor 사이즈와 개수 정하기 에서 옮겨왔습니다.Spark Application을 띄울때 가장 기본적으로 설정해야하는 요소.Executor의 사이즈와 개수는 어떻게 정하는 것이 좋을까?Executor에 관한 몇 가지 기본 전제를 먼저 확인해보자. executor는 캐싱과 실행을 위한 공간을 갖고 있는 JVM이다. executor와 driver의 사이즈는 하나의 노드나 컨테이너에 할당된 자원보다 많은 메모리나 코어를 가질 수 없다. executor의 일부 공간은 ..." } ]
